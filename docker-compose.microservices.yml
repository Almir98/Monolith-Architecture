# Microservices Application
# Connects to the shared monitoring stack

services:
  # API Gateway
  api-gateway:
    build:
      context: ./apps/microservices
      dockerfile: src/ApiGateway/Dockerfile
    container_name: api-gateway
    ports:
      - "8100:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      - health-service
      - order-service
      - compute-service
      - bulk-service
    networks:
      - microservices-network
      - monitoring-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # HealthService
  health-service:
    build:
      context: ./apps/microservices
      dockerfile: src/HealthService/Dockerfile
    container_name: health-service
    ports:
      - "8101:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    networks:
      - microservices-network
      - monitoring-network
    restart: unless-stopped

  # OrderService
  order-service:
    build:
      context: ./apps/microservices
      dockerfile: src/OrderService/Dockerfile
    container_name: order-service
    ports:
      - "8102:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Data Source=/data/orders.db
    volumes:
      - order-data:/data
    networks:
      - microservices-network
      - monitoring-network
    restart: unless-stopped

  # ComputeService
  compute-service:
    build:
      context: ./apps/microservices
      dockerfile: src/ComputeService/Dockerfile
    container_name: compute-service
    ports:
      - "8103:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    networks:
      - microservices-network
      - monitoring-network
    restart: unless-stopped

  # BulkService
  bulk-service:
    build:
      context: ./apps/microservices
      dockerfile: src/BulkService/Dockerfile
    container_name: bulk-service
    ports:
      - "8104:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    networks:
      - microservices-network
      - monitoring-network
    restart: unless-stopped

networks:
  microservices-network:
    driver: bridge
  monitoring-network:
    external: true
    name: monolith-architecture_monitoring-network

volumes:
  order-data: