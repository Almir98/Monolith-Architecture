╔══════════════════════════════════════════════════════════════════════════════╗
║                                                                              ║
║                    QUICK REFERENCE - BRZE KOMANDE                           ║
║                                                                              ║
╚══════════════════════════════════════════════════════════════════════════════╝


┌──────────────────────────────────────────────────────────────────────────────┐
│ 🚀 POKRETANJE                                                                │
└──────────────────────────────────────────────────────────────────────────────┘

# Pokreni aplikaciju
dotnet run

# Pokreni Prometheus + Grafana
docker-compose up -d

# Pokreni load test
k6 run load-testing/k6-script.js


┌──────────────────────────────────────────────────────────────────────────────┐
│ 🛑 ZAUSTAVLJANJE                                                             │
└──────────────────────────────────────────────────────────────────────────────┘

# Zaustavi aplikaciju
Ctrl+C (u terminalu)
Shift+F5 (u Visual Studiju)

# Zaustavi monitoring
docker-compose down


┌──────────────────────────────────────────────────────────────────────────────┐
│ 🔍 PROVJERA STATUSA                                                          │
└──────────────────────────────────────────────────────────────────────────────┘

# Provjeri Docker kontejnere
docker-compose ps

# Vidi logove
docker-compose logs -f

# Provjeri aplikaciju
curl http://localhost:62553/health/ping


┌──────────────────────────────────────────────────────────────────────────────┐
│ 🔗 VAŽNI URL-OVI                                                             │
└──────────────────────────────────────────────────────────────────────────────┘

Aplikacija:     http://localhost:62553
Swagger:        http://localhost:62553/swagger
Metrike:        http://localhost:62553/metrics
Prometheus:     http://localhost:9090
Grafana:        http://localhost:3000 (admin/admin)


┌──────────────────────────────────────────────────────────────────────────────┐
│ 📊 TOP PROMETHEUS QUERIES                                                    │
└──────────────────────────────────────────────────────────────────────────────┘

# Request rate (zahtjeva/sekundi)
rate(http_requests_total[1m])

# Average response time
rate(http_request_duration_seconds_sum[1m]) / rate(http_request_duration_seconds_count[1m])

# P95 response time
histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[1m]))

# P99 response time
histogram_quantile(0.99, rate(http_request_duration_seconds_bucket[1m]))

# Top 5 endpoints
topk(5, sum by (endpoint) (rate(http_requests_total[1m])))

# Requests by method
sum by (method) (rate(http_requests_total[1m]))

# Total requests
sum(http_requests_total)


┌──────────────────────────────────────────────────────────────────────────────┐
│ 🧪 TESTIRANJE ENDPOINT-A (PowerShell)                                       │
└──────────────────────────────────────────────────────────────────────────────┘

# Health check
Invoke-WebRequest -Uri "http://localhost:62553/health/ping"

# Get svi orders
Invoke-WebRequest -Uri "http://localhost:62553/orders"

# Kreiraj order
Invoke-RestMethod -Uri "http://localhost:62553/orders" -Method POST -ContentType "application/json" -Body '{"productName":"Laptop","quantity":2,"price":999.99}'

# CPU test
Invoke-WebRequest -Uri "http://localhost:62553/compute?n=35"

# Bulk processing
Invoke-RestMethod -Uri "http://localhost:62553/bulk?count=100" -Method POST


┌──────────────────────────────────────────────────────────────────────────────┐
│ 🔧 TROUBLESHOOTING                                                           │
└──────────────────────────────────────────────────────────────────────────────┘

# Restart Prometheus
docker-compose restart prometheus

# Restart Grafana
docker-compose restart grafana

# Očisti sve (sa volumes)
docker-compose down -v

# Rebuild aplikacije
dotnet clean
dotnet restore
dotnet build


